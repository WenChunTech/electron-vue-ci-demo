# This is a basic workflow to help you get started with Actions

name: electron-vue-CI

# Controls when the action will run. 
on:
  watch:
    types: [started]
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    runs-on: ubuntu-latest
    container:
      image: electronuserland/builder:wine
    #strategy:
    # matrix:
    #    os: [ubuntu-20.04, macos-11.0, windows-2019]
    # The type of runner that the job will run on
    #runs-on: ${{ matrix.os }}

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo 开始工作!

      # Runs a set of commands using the runners shell
      - name: 启动docker容器
        run: |
          docker run --rm -ti \
           --env-file <(env | grep -iE 'DEBUG|NODE_|ELECTRON_|YARN_|NPM_|CI|CIRCLE|TRAVIS_TAG|TRAVIS|TRAVIS_REPO_|TRAVIS_BUILD_|TRAVIS_BRANCH|TRAVIS_PULL_REQUEST_|APPVEYOR_|CSC_|GH_|GITHUB_|BT_|AWS_|STRIP|BUILD_') \
           --env ELECTRON_CACHE="/root/.cache/electron" \
           --env ELECTRON_BUILDER_CACHE="/root/.cache/electron-builder" \
           -v ${PWD}:/project \
           -v ${PWD##*/}-node-modules:/project/node_modules \
           -v ~/.cache/electron:/root/.cache/electron \
           -v ~/.cache/electron-builder:/root/.cache/electron-builder \
           electronuserland/builder:wine
      - name: 安装依赖,开始打包
        working-directory: .
#         run: |
#           yarn
#           yarn build-win
#           yarn build-linux
#           yarn build-mac
      - name: Build and Deploy
        uses: JamesIves/github-pages-deploy-action@master
        env:
          ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}
          BRANCH: master
          FOLDER: dist
          BUILD_SCRIPT: yarn && yarn build-win && yarn build-linux && yarn build-mac
