# This is a basic workflow to help you get started with Actions

name: electron-vue-CI

# Controls when the action will run. 
on:
  watch:
    types: [started]
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  win-build:
    runs-on: windows-latest
    steps:
      - name: Repo Checkout
        uses: actions/checkout@v2
      
      - name: Node Build 
        uses: actions/setup-node@v2
        with:
          node-version: '14'
          architecture: 'x64' # optional, x64 or x86. If not specified, x64 will be used by default
      
      - name: 安装依赖,开始打包
        working-directory: .
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          dir
          yarn 
          yarn build-win
          Compress-Archive -Path .\dist 'dist.zip'
          
      - name: Create Release
        id: create_release
        uses: monkeyWie/create-release@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
          
      - name: Upload Release
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: .
          asset_name: dist.zip
          asset_content_type: application/zip


#   build:
#     runs-on: ubuntu-latest
#     strategy:
#     matrix:
#        os: [ubuntu-20.04, macos-11.0, windows-2019]
#     The type of runner that the job will run on
#     runs-on: ${{ matrix.os }}
